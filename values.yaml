#################################
## Astronomer global configuration
#################################
global:
  # Base domain for all subdomains exposed through ingress
  baseDomain: ~

  # Name of secret containing TLS certificate
  tlsSecret: ~

  # Use kube-lego
  acme: false

  # If RBAC on cluster is enabled
  rbacEnabled: true

  # URL to the Astronomer helm repo
  helmRepo: "https://helm.astronomer.io"

  # Host and port of where tiller is running in Kubernetes
  helmHost: "tiller-deploy.kube-system.svc.cluster.local:44134"

  # Single namespace mode
  singleNamespace: false

  # Enable/Disable components.
  # Full platform is enabled by default.
  # Airflow chart is disabled is should be deployed via the platform using the API/CLI/UI.
  airflowEnabled: false

  externalDnsEnabled: true

#################################
## Default tagged groups enabled
#################################
tags:
  # Enable platform components by default (nginx, astronomer)
  platform: true

  # Enable monitoring stack (prometheus, kube-state, grafana)
  monitoring: true

  # Enable logging stack (elasticsearch, fluentd, kibana)
  logging: true


#################################
## Astronomer configuration
#################################
astronomer:
  orbit:
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"

  houston:
    resources:
      requests:
        cpu: "250m"
        memory: "512Mi"
      limits:
        cpu: "800m"
        memory: "1024Mi"

  prisma:
    resources:
      requests:
        cpu: "250m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"

  commander:
    resources:
      requests:
        cpu: "250m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"

  registry:
    resources:
      requests:
        cpu: "250m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"

    persistence:
      enabled: true
      size: "100Gi"

  install:
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"

  kubeReplicator:
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"


#################################
## Nginx configuration
#################################
nginx:
  # Configure resources
  resources:
    requests:
      cpu: "500m"
      memory: "1024Mi"
    limits:
      cpu: "1"
      memory: "2048Mi"

  # IP address the nginx ingress should bind to
  loadBalancerIP:

  # Used to restrict IPs which can reach the nginx ingress
  loadBalancerSourceRanges:


#################################
## Grafana configuration
#################################
grafana:
  # Configure resources
  resources:
    requests:
      cpu: "250m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "1024Mi"


#################################
## Prometheus configuration
#################################
prometheus:
  # Data retention
  retention: 15d

  # Persistence configuration
  persistence:
    enabled: true
    size: "100Gi"

  # Configure resources
  resources:
    requests:
      cpu: "1000m"
      memory: "4Gi"
    limits:
      cpu: "1000m"
      memory: "4Gi"


#################################
## Elasticsearch configuration
#################################
elasticsearch:
  # Common configuration
  common:
    persistence:
      enabled: true

  # Configure client nodes
  client:
    # Match resources.requests.memory
    heapMemory: "2g"

    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "2"
        memory: "4Gi"

  # Configure data nodes
  data:
    # Match resources.requests.memory
    heapMemory: "2g"

    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "2"
        memory: "4Gi"

    persistence:
      size: "100Gi"

  # Configure master nodes
  master:
    # Match resources.requests.memory
    heapMemory: "2g"

    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "2"
        memory: "4Gi"

    persistence:
      size: "20Gi"


#################################
## Kibana configuration
#################################
kibana:
  # Configure resources
  resources:
    requests:
      cpu: "250m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "1024Mi"


#################################
## Fluentd configuration
#################################
# fluentd:
#   # Configure resources
#   resources:
#     requests:
#       cpu: "250m"
#       memory: "512Mi"
#     limits:
#       cpu: "500m"
#       memory: "1024Mi"


#################################
## Kube State configuration
#################################
# kubeState:
#   # Configure resources
#   resources:
#     requests:
#       cpu: "250m"
#       memory: "512Mi"
#     limits:
#       cpu: "500m"
#       memory: "1024Mi"
